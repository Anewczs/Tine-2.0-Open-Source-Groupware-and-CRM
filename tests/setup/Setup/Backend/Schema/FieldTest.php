<?php
// Call Setup_Backend_Schema_FieldTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'Setup_Backend_Schema_FieldTest::main');
}

require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__) . '/../../../TestHelper.php';

/**
 * Test class for Setup_Backend_Schema_Field.
 * Generated by PHPUnit on 2008-04-23 at 17:26:20.
 */
class Setup_Backend_Schema_FieldTest extends Setup_Backend_AbstractTest
{
    
    public function testIsValid()
    {
        $string ="
            <field>
                <name>a</name>
                <type>integer</type>
                <autoincrement>true</autoincrement>
                <unsigned>true</unsigned>
            </field>";

        $field = Setup_Backend_Schema_Field_Factory::factory('Xml', $string);       
        $this->assertTrue($field->isValid(), 'Test if a valid field is correctly marked as valid');
        $this->assertTrue($field->isValid(true), 'Test if no Exception is thrown on validating a valid field is correctly marked as valid');
        
        $field->setName(str_pad('A', 23, 'a'));
        $this->asserttrue($field->isValid(), 'Test if the maximum field name length is still valid');
        
        $field->setName(str_pad('A', 24, 'a'));
        $this->assertFalse($field->isValid(), 'Test if a too long field name is invalid');
        
        $this->setExpectedException('Setup_Exception_InvalidSchema');
        $field->isValid(true); //Test if the parameter throwException works as expected
    }

}

// Call Setup_Backend_Schema_FieldTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Setup_Backend_Schema_FieldTest::main') {
    Setup_Backend_Schema_FieldTest::main();
}
?>
