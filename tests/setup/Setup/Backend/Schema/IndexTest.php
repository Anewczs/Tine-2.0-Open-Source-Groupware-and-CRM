<?php
// Call Setup_Backend_Schema_IndexTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'Setup_Backend_Schema_IndexTest::main');
}

require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__) . '/../../../TestHelper.php';

/**
 * Test class for Setup_Backend_Schema_Index.
 * Generated by PHPUnit on 2008-04-23 at 17:26:34.
 */
class Setup_Backend_Schema_IndexTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    Setup_Backend_Schema_Index
     * @access protected
     */
    protected $object;

    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('Setup_Backend_Schema_IndexTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp()
    {
       // $this->object = new Setup_Backend_Schema_Index;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown()
    {
    }

    public function testIsValid()
    {
        $string ="
                <index>
                    <unique>true</unique>
                    <field>
                        <name>a</name>
                    </field>
                </index>";
        
        $index = Setup_Backend_Schema_Index_Factory::factory('Xml', $string);

        $this->assertTrue($index->isValid(), 'Test if a valid field is correctly marked as valid');
        $this->assertTrue($index->isValid(true), 'Test if no Exception is thrown on validating a valid field is correctly marked as valid');

        $string ="
                <index>
                    <unique>true</unique>
                    <field>
                        <name>" . str_pad('A', 23, 'a') . "</name>
                    </field>
                </index>";
        
        $index = Setup_Backend_Schema_Index_Factory::factory('Xml', $string);
        $this->asserttrue($index->isValid(), 'Test if the maximum field name length is still valid');

        $string ="
                <index>
                    <unique>true</unique>
                    <field>
                        <name>a</name>
                    </field>
                    <field>
                        <name>" . str_pad('A', 23, 'a') . "</name>
                    </field>
                </index>";
        
        $index = Setup_Backend_Schema_Index_Factory::factory('Xml', $string);
        
        $this->assertFalse($index->isValid(), 'Test if a too long field name is invalid');
        
        $this->setExpectedException('Setup_Exception_InvalidSchema');
        $index->isValid(true); //Test if the parameter throwException works as expected
    }
    
    /**
     * @todo Implement testSetName().
     */
    public function testSetName() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSetForeignKey().
     */
    public function testSetForeignKey() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}

// Call Setup_Backend_Schema_IndexTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Setup_Backend_Schema_IndexTest::main') {
    Setup_Backend_Schema_IndexTest::main();
}
?>
